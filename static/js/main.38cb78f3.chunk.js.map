{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","Components/PhonebookForm/PhonebookForm.jsx","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.jsx","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","toLocaleLowerCase","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","fetchAddContactRequest","fetchAddContactSuccess","fetchAddContactError","fetchDeleteContactRequest","fetchDeleteContactSuccess","fetchDeleteContactError","changeFilter","axios","defaults","baseURL","useStyles","createUseStyles","form","display","flexDirection","marginLeft","marginRight","padding","width","border","borderRadius","boxShadow","label","marginBottom","justifyContent","color","button","backgroundColor","outline","cursor","PhonebookForm","useState","number","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","alert","handleUniq","s","className","onSubmit","e","preventDefault","post","then","data","catch","error","addContact","input","type","value","onChange","target","listItem","alignItems","fontWeight","ContactItem","onClick","id","a","delete","list","margin","ContactList","useEffect","get","map","ContactListItem","marginTop","Filter","App","createReducer","_","payload","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38cb78f3.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    ),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\nexport const fetchAddContactRequest = createAction(\r\n  'contacts/fetchAddContactRequest',\r\n);\r\nexport const fetchAddContactSuccess = createAction(\r\n  'contacts/fetchAddContactSuccess',\r\n);\r\nexport const fetchAddContactError = createAction(\r\n  'contacts/fetchAddContactError',\r\n);\r\n\r\nexport const fetchDeleteContactRequest = createAction(\r\n  'contacts/fetchDeleteContactRequest',\r\n);\r\nexport const fetchDeleteContactSuccess = createAction(\r\n  'contacts/fetchDeleteContactSuccess',\r\n);\r\nexport const fetchDeleteContactError = createAction(\r\n  'contacts/fetchDeleteContactError',\r\n);\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchAddContactError,\r\n  fetchAddContactSuccess,\r\n  fetchAddContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactRequest,\r\n  fetchDeleteContactSuccess,\r\n  fetchDeleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(fetchAddContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(fetchAddContactSuccess(data)))\r\n    .catch(error => dispatch(fetchAddContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(fetchDeleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(fetchDeleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactError(error));\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: 25,\r\n    width: '250px',\r\n    border: '1px solid black ',\r\n    borderRadius: 4,\r\n    boxShadow: '1px 1px 0px 0px black',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    marginBottom: 10,\r\n    justifyContent: 'space-between',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    border: '1px solid black ',\r\n    boxShadow: '2px 2px 0px 0px black',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid orange ',\r\n      boxShadow: '2px 2px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please еnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  const s = useStyles();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    boxShadow: '1px 1px 0px 0px black',\r\n    border: 'none',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      boxShadow: '1px 1px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.name}>{contact.name}</p>\r\n      <p className={s.number}>{contact.number}</p>\r\n      <button className={s.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, []);\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const s = useStyles();\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  label: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n});\r\nconst Filter = () => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PhonebookForm from './Components/PhonebookForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <PhonebookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAddContactSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [fetchAddContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [fetchDeleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from './contacts/contact-reducer';\r\n\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}